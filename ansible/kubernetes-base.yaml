- hosts: console
  become: yes
  vars_files:
    - /opt/mgmt/values-ssp.yaml
  tasks:

    # Install the Flannel SDN (Software Defined Network) implementation

    - name: Install pod network
      become: yes
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
      args:
        chdir: $HOME
        creates: pod_network_setup.txt

    # Install the Helm package manager along with the Tiller Companion inside the Kubernetes cluster

    - name: Download the Helm package manager
      get_url:
        url: https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get
        dest: /tmp/install-helm.sh
        mode: '0755'

    - name: Install Helm
      shell: /tmp/install-helm.sh

    - name: Create a service account for Tiller
      shell: kubectl -n kube-system delete serviceaccounts tiller --ignore-not-found=true && kubectl -n kube-system create serviceaccount tiller

    - name: Create a cluster role binding for Tiller
      shell: kubectl -n kube-system delete clusterrolebinding tiller --ignore-not-found=true && kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount=kube-system:tiller

    - name: Initialize Helm and the Tiller companion inside the Kubernetes cluster
      shell: helm init --service-account tiller
      register: helm_init_result

    - name: Show Helm init result
      debug:
        msg: "{{ helm_init_result.stdout_lines }}"

    - name: Ensure that Tiller is running
      shell: kubectl get pods --namespace kube-system -l name=tiller
      register: kubectl_kube_system_pods
      until: kubectl_kube_system_pods.stdout.find("Running") != -1
      retries: 5
      delay: 10

    # Install the base components

    - name: Create the base namespace
      shell: kubectl create namespace ssp-base

    - name: Create the Docker Registry pull secret inside all custom namespaces
      shell: "kubectl create -n ssp-base secret generic admin-password --from-literal=admin-user=admin --from-literal=admin-password={{ platform.admin.password }}"
