- hosts: host
  become: yes
  tasks:

  # Install the NGINX web proxy via it's officially supported Helm package

  - name: Install prerequisites of the NGINX ingress
    shell: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.24.0/deploy/mandatory.yaml

  - name: Install the NGINX Helm package
    shell: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.24.0/deploy/provider/baremetal/service-nodeport.yaml

  # Install Cert Manager

  - name: Create the Kubernetes namespace for the Cert Manager
    shell: kubectl create namespace cert-manager

  - name: Install custom ressource definitions
    shell: kubectl apply -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.9/deploy/manifests/00-crds.yaml

  - name: Disable the automatic validation feature on the Cert Manager namespace
    shell: kubectl label namespace cert-manager certmanager.k8s.io/disable-validation="true"

  - name: Create the LetsEncrypt staging cluster issuer
    shell: |
      cat <<EOF | kubectl create -f -
      apiVersion: certmanager.k8s.io/v1alpha1
      kind: ClusterIssuer
      metadata:
        labels:
          name: letsencrypt-staging
        name: letsencrypt-staging
      spec:
        acme:
          email: {{ platform.email }}
          http01: {}
          privateKeySecretRef:
            name: clusterissuer-letsencrypt-staging
          server: https://acme-staging-v02.api.letsencrypt.org/directory
      EOF

  - name: Create the LetsEncrypt production cluster issuer
    shell: |
      cat <<EOF | kubectl create -f -
      apiVersion: certmanager.k8s.io/v1alpha1
      kind: ClusterIssuer
      metadata:
        labels:
          name: letsencrypt-production
        name: letsencrypt-production
      spec:
        acme:
          email: {{ platform.email }}
          http01: {}
          privateKeySecretRef:
            name: clusterissuer-letsencrypt-production
          server: https://acme-v02.api.letsencrypt.org/directory
      EOF

  - name: Add the Jetstack Helm repository
    shell: helm repo add jetstack https://charts.jetstack.io

  - name: Install the Cert Manager via it's Helm package
    shell: helm install --name certmanager --namespace cert-manager jetstack/cert-manager --set ingressShim.defaultIssuerKind=ClusterIssuer,ingressShim.defaultIssuerName=letsencrypt-staging,ingressShim.defaultACMEChallengeType=http01

  # Deploy the Echo service

  - name: Deploy the echo app
    shell: |
      cat <<EOF | kubectl create -f -
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: echo
      spec:
        selector:
          matchLabels:
            app: echo
        replicas: 1
        template:
          metadata:
            labels:
              app: echo
          spec:
            containers:
            - name: echo
              image: hashicorp/http-echo
              args:
              - "-text=echo"
              ports:
              - containerPort: 5678
      ---
      apiVersion: v1
      kind: Service
      metadata:
        name: echo
      spec:
        ports:
        - port: 80
          targetPort: 5678
        selector:
          app: echo
      ---
      apiVersion: extensions/v1beta1
      kind: Ingress
      metadata:
        name: echo-ingress
        annotations:  
          kubernetes.io/ingress.class: nginx
          kubernetes.io/tls-acme: "true"
      spec:
        tls:
        - hosts:
          - {{ platform.domain }}
          secretName: letsencrypt-staging
        rules:
        - host: echo.{{ platform.domain }}
          http:
            paths:
            - backend:
                serviceName: echo
                servicePort: 80
      EOF

# Include firewall settings
- name: Include the Kubernetes firewall settings
  import_playbook: kubernetes-firewall.yaml
