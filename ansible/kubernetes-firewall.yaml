- hosts: host
  become: yes
  vars_files:
    - /opt/mgmt/values-ssp.yaml
  tasks:

  # Wait for the Nginx service to come up
  - name: Wait for the Nginx service to come up
    shell: kubectl -n ingress-nginx get svc ingress-nginx
    register: result
    until: result.stdout.find("NodePort") != -1
    retries: 50
    delay: 10

  - name: Determine the dynamic HTTP port of the Nginx service
    shell: kubectl -n ingress-nginx get svc ingress-nginx -o jsonpath='{.spec.ports[0].nodePort}'
    register: nginx_port_http

  - name: Determine the dynamic HTTPS port of the Nginx service
    shell: kubectl -n ingress-nginx get svc ingress-nginx -o jsonpath='{.spec.ports[1].nodePort}'
    register: nginx_port_https

  - name: Show the ports of the Nginx service
    debug:
      msg: 'Nginx ports: http={{ nginx_port_http.stdout }}, https={{ nginx_port_https.stdout }}'

  # Set firewall rules to masquerade the virtual network and forward incoming traffic
#  - name: Allow forwarding of inbound traffic
#    shell: |
#      /sbin/iptables -A POSTROUTING -o eth0 -j MASQUERADE
#      /sbin/iptables -A PREROUTING -p tcp --dport 80 -j DNAT --to-destination {{ hostvars.kubenode1.ansible_host }}:{{ nginx_port_http.stdout }}
#      /sbin/iptables -A PREROUTING -p tcp --dport 443 -j DNAT --to-destination {{ hostvars.kubenode1.ansible_host }}:{{ nginx_port_https.stdout }}
#      /sbin/iptables -I FORWARD -m state -i eth0 --dport 80 --state NEW,RELATED,ESTABLISHED -j ACCEPT
#      /sbin/iptables -I FORWARD -m state -i eth0 --dport 443 --state NEW,RELATED,ESTABLISHED -j ACCEPT
