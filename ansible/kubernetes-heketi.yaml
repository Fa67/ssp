- hosts: kubenodes
  become: yes
  vars_files:
  - /opt/mgmt/values-ssp.yaml
  tasks:

  - name: Install Thin Provisioning tools on all Kubernetes nodes
    apt:
      name: thin-provisioning-tools
      state: present

- hosts: kubemaster
  become: yes
  tasks:

  - name: Create the Heketi group
    group:
      gid: 515
      name: heketi
      state: present

  - name: Create Heketi user and add it to the Heketi group
    user:
      uid: 515
      name: heketi
      group: heketi
      shell: /bin/false
      home: /var/lib/heketi
      state: present

  - name: Create the Heketi directories
    file:
      path: '{{ item }}'
      state: directory
      owner: heketi
      group: heketi
    loop:
      - "/var/lib/heketi"
      - "/var/log/heketi"

  - name: Create the Heketi etc directory
    file:
      path: /etc/heketi
      state: directory

  - name: Generate an RSA key pair to allow Heketi to login on all storage nodes
    shell: "yes y | ssh-keygen -f /etc/heketi/heketi_key -t rsa -N '' >/dev/null"

  - name: Read the public RSA key
    shell: "cat /etc/heketi/heketi_key.pub"
    register: heketi_rsa_key_pub

  - name: The public Heketi key
    debug:
      msg: "{{ heketi_rsa_key_pub.stdout }}"

  - name: Give Heketi access to the key pair
    file:
      path: /etc/heketi/heketi_key
      owner: heketi
      group: heketi

  - name: Download and unpack the Heketi deployment
    unarchive:
      src: https://github.com/heketi/heketi/releases/download/v9.0.0/heketi-v9.0.0.linux.amd64.tar.gz
      dest: /tmp
      remote_src: yes

  - name: Copy the Heketi command line client to the binaries directory
    copy:
      remote_src: yes
      src: /tmp/heketi/{{ item }}
      dest: /usr/local/bin/{{ item }}
      owner: heketi
      group: heketi
      mode: '0755'
    loop:
      - "heketi"
      - "heketi-cli"

  - name: Create the Heketi configuration file
    copy:
      dest: /etc/heketi/heketi.json
      content: |
        {
          "_port_comment": "Heketi Server Port Number",
          "port": "8080",
          "_use_auth": "Enable JWT authorization. Please enable for deployment",
          "use_auth": true,
          "_jwt": "Private keys for access",
          "jwt": {
            "_admin": "Admin has access to all APIs",
            "admin": {
              "key": "PASSWORD"
            },
            "_user": "User only has access to /volumes endpoint",
            "user": {
              "key": "PASSWORD"
            }
          },
          "_glusterfs_comment": "GlusterFS Configuration",
          "glusterfs": {
            "_executor_comment": [
              "Execute plugin. Possible choices: mock, ssh",
              "mock: This setting is used for testing and development.",
              "      It will not send commands to any node.",
              "ssh:  This setting will notify Heketi to ssh to the nodes.",
              "      It will need the values in sshexec to be configured.",
              "kubernetes: Communicate with GlusterFS containers over",
              "            Kubernetes exec api."
            ],
            "executor": "ssh",
            "_sshexec_comment": "SSH username and private key file information",
            "sshexec": {
              "keyfile": "/etc/heketi/heketi_key",
              "user": "root",
              "port": "22",
              "fstab": "/etc/fstab"
            },
            "_kubeexec_comment": "Kubernetes configuration",
            "kubeexec": 
            {
              "host" :"https://kubernetes.host:8443",
              "cert" : "/path/to/crt.file",
              "insecure": false,
              "user": "kubernetes username",
              "password": "password for kubernetes user",
              "namespace": "OpenShift project or Kubernetes namespace",
              "fstab": "Optional: Specify fstab file on node.  Default is /etc/fstab"
            },
            "_db_comment": "Database file name",
            "db": "/var/lib/heketi/heketi.db",
            "brick_max_size_gb" : 1024,
            "brick_min_size_gb" : 1,
            "max_bricks_per_volume" : 33,
            "_loglevel_comment": [
              "Set log level. Choices are:",
              "  none, critical, error, warning, info, debug",
              "Default is warning"
            ],
            "loglevel" : "debug"
          }
        }

  - name: Create the Heketi service defintion
    copy:
      dest: /etc/systemd/system/heketi.service
      content: |
        [Unit]
        Description=Heketi Server
        Requires=network-online.target
        After=network-online.target
        [Service]
        Type=simple
        User=heketi
        Group=heketi
        PermissionsStartOnly=true
        PIDFile=/run/heketi/heketi.pid
        Restart=on-failure
        RestartSec=10
        WorkingDirectory=/var/lib/heketi
        RuntimeDirectory=heketi
        RuntimeDirectoryMode=0755
        ExecStart=/usr/local/bin/heketi --config=/etc/heketi/heketi.json
        ExecReload=/bin/kill -s HUP $MAINPID
        KillSignal=SIGINT
        TimeoutStopSec=5
        [Install]
        WantedBy=multi-user.target

  - name: Reload systemd, start and enable the Heketi service
    systemd:
      name: heketi
      state: started
      enabled: yes
      daemon_reload: yes

  - name: Create the Heketi topology definition
    copy:
      dest: /etc/heketi/topology.json
      content: |
        {
          "clusters": [
            {
              "nodes": [
                {
                  "node": {
                    "hostnames": {
                      "manage": [
                        "kubenode0"
                      ],
                      "storage": [
                        "10.88.20.110"
                      ]
                    },
                    "zone": 1,
                    "tags": {
                      "arbiter": "required"
                    }
                  },
                  "devices": [
                    "/dev/vdb"
                  ]
                },
                {
                  "node": {
                    "hostnames": {
                      "manage": [
                        "kubenode1"
                      ],
                      "storage": [
                        "10.88.20.111"
                      ]
                    },
                    "zone": 1,
                    "tags": {
                      "arbiter": "disabled" 
                    }
                  },
                  "devices": [
                    "/dev/vdb",
                    "/dev/vdc",
                    "/dev/vdd",
                    "/dev/vde"
                  ]
                },
                {
                  "node": {
                    "hostnames": {
                      "manage": [
                        "kubenode2"
                      ],
                      "storage": [
                        "10.88.20.112"
                      ]
                    },
                    "zone": 1,
                    "tags": {
                      "arbiter": "disabled" 
                    }
                  },
                  "devices": [
                    "/dev/vdb",
                    "/dev/vdc",
                    "/dev/vdd",
                    "/dev/vde"
                  ]
                }
              ]
            }
          ]
        }

- hosts: kubenodes
  become: yes
  tasks:

  - shell: "echo '{{ hostvars['kubemaster']['heketi_rsa_key_pub'].stdout }}' > /tmp/key"

  - name: Share the Heketi SSH key on every storage node
    authorized_key:
      user: root
      state: present
      key: "{{ hostvars['kubemaster']['heketi_rsa_key_pub'].stdout }}"

  - name: Restart the SSH daemon
    systemd:
      state: restarted
      daemon_reload: yes
      name: sshd

- hosts: kubemaster
  become: yes
  tasks:

  - name: Initialize Heketi with the storage topology
    shell: "/usr/local/bin/heketi-cli topology load --json=/etc/heketi/topology.json"
    environment:
      HEKETI_CLI_SERVER: "http://10.88.20.109:8080"
      HEKETI_CLI_USER: "admin"
      HEKETI_CLI_KEY: "PASSWORD"

- hosts: host
  become: yes
  tasks:

  - name: Deploy the Gluster daemon set inside the Kubernetes cluster
    shell: "kubectl create -f /opt/mgmt/ssp/kubernetes/gluster/dynamic-daemonset.yaml"

  - name: Deploy the Heketi password as a Kubernetes secret
    shell: "kubectl create -f /opt/mgmt/ssp/kubernetes/gluster/dynamic-secret.yaml"

  - name: Deploy the default storage class inside the Kubernetes cluster
    shell: "kubectl create -f /opt/mgmt/ssp/kubernetes/gluster/dynamic-storageclass.yaml"
